<!DOCTYPE html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrito</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body style="font-family: Arial, sans-serif; background-color: #f5f5f5; color: #333; padding: 20px;">
    <h1 style="text-align: center; color: #007bff;">Carrito</h1>
    <ul id="cartProducts" style="list-style-type: none; padding: 0;">
        {{#each cart.products}}
        <li style="background-color: #fff; padding: 15px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); margin-bottom: 15px;">
            <strong>Id del Producto:</strong> {{this.product._id}} <br>
            <strong>Nombre:</strong> {{this.product.tittle}} <br>
            <strong>Precio:</strong> ${{this.product.price}} <br>
            <strong>Cantidad:</strong> {{this.quantity}} <br>
            <strong>Total por unidad:</strong> ${{multiply this.product.price this.quantity}} <br>
            <button onclick="removeFromCart('{{this.product._id}}')" 
                    style="margin-top: 10px; padding: 8px 12px; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Eliminar
            </button>
        </li>
        {{/each}}
    </ul>
    <h3 style="color: #28a745;">Total a pagar: ${{cartTotal}}</h3>
    <form action="" id="form-user" style="margin-top: 20px; padding: 15px; background-color: #fff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <input type="text" id="nombre" name="nombre" placeholder="Ingrese su nombre" 
            style="width: 100%; padding: 10px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;">
        
        <input type="text" id="direccion" name="direccion" placeholder="Ingrese su direccion" 
            style="width: 100%; padding: 10px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;">
        
        <input type="text" id="telefono" name="telefono" placeholder="Ingrese su telefono" 
            style="width: 100%; padding: 10px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;">
        
        <select id="metodoDePago" name="metodoDePago" 
                style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px;">
            <option value="Efectivo">Efectivo</option>
            <option value="Mercado pago">Mercado Pago</option>
        </select>
    </form>
    <button onclick="placeOrder()" style="width: 100%; padding: 12px; background-color: #007bff; color: #fff; border: none; border-radius: 4px; cursor: pointer; margin-top: 15px;">
        Ordenar
    </button>

    <div class="ticketContainer" style="margin-top: 20px;"></div>

    <script>
    const cartId = '66f7728452336cfd1dc02875';
    const cartProducts = document.getElementById('cartProducts');

    function removeFromCart(productId) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "Esta acción no se puede deshacer.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/api/cart/${cartId}/products/${productId}`, { 
                    method: 'DELETE'
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => { throw new Error(data.error || 'Error desconocido'); });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Producto eliminado del carrito:', data);
                    Swal.fire({
                        icon: 'success',
                        title: 'Eliminado',
                        text: 'Producto eliminado correctamente',
                        confirmButtonColor: '#28a745'
                    }).then(() => location.reload());
                })
                .catch(error => {
                    console.error('Error al eliminar el producto:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Ocurrió un problema al eliminar el producto.',
                        confirmButtonColor: '#dc3545'
                    });
                });
            }
        });
    }

    function placeOrder() {
        const nombre = document.getElementById('nombre').value;
        const direccion = document.getElementById('direccion').value;
        const telefono = document.getElementById('telefono').value;
        const metodoDePago = document.getElementById('metodoDePago').value;

        if (!nombre || !direccion || !telefono || !metodoDePago) {
            Swal.fire({
                icon: 'error',
                title: 'Campos incompletos',
                text: 'Por favor, completa todos los campos antes de proceder.',
                confirmButtonColor: '#dc3545'
            });
            return; 
        }

        fetch('/api/order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                cartId,
                user: { nombre, direccion, telefono },
                metodoDePago
            })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => { throw new Error(data.error || 'Error al crear la orden y el ticket'); });
            }
            return response.json();
        })
        .then(data => {
            console.log('Orden y ticket creados:', data);
            
            // Mostrar mensaje de éxito
            Swal.fire({
                icon: 'success',
                title: 'Pedido completado',
                text: 'La orden y el ticket fueron generados correctamente.',
                confirmButtonColor: '#28a745'
            }).then(() => {
                // Crear el botón para ver el ticket
                const verTicketBtn = document.createElement('button');
                verTicketBtn.textContent = 'Ver Ticket';
                verTicketBtn.classList.add('btn', 'btn-primary');
                verTicketBtn.onclick = function() {
                    // Función para mostrar el ticket
                    showTicket(data.ticket._id);
                };

                // Asegurarnos de que el contenedor existe en el DOM
                const container = document.getElementById('ticketContainer');
                if (container) {
                    container.appendChild(verTicketBtn);
                }
            });
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Ocurrió un problema al completar el pedido.',
                confirmButtonColor: '#dc3545'
            });
        });
    }

    function showTicket(ticketId) {
        fetch(`/api/ticket/${ticketId}`)
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => { throw new Error(data.error || 'Error al obtener el ticket'); });
            }
            return response.json();  // Espera un JSON
        })
        .then(ticketData => {
            console.log('Ticket:', ticketData);
            // Mostrar el ticket en el frontend
            Swal.fire({
                title: 'Ticket',
                html: `<pre>${JSON.stringify(ticketData, null, 2)}</pre>`,
                confirmButtonColor: '#28a745'
            });
        })
        .catch(error => {
            console.error('Error al obtener el ticket:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Ocurrió un problema al obtener el ticket.',
                confirmButtonColor: '#dc3545'
            });
        });
    }
</script>
<div id="ticketContainer"></div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
